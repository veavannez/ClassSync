/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classsync;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 *
 * @author vea vannez
 */
public class editCoursejf extends javax.swing.JFrame {
    public String openAcc;
    /**
     * Creates new form editCoursejf
     * @param openAcc
     */
    public editCoursejf(String openAcc) {
        this.openAcc = openAcc;
        initComponents();
    }

    private editCoursejf() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    private void clearAll() {
    Component[] components = jPanel2.getComponents();
    for (Component component : components) {
        if (component instanceof JTextField jTextField) {
            jTextField.setText("");
        } else if (component instanceof JRadioButton radioButton) {
            ButtonGroup buttonGroup = courseDay;
            if (buttonGroup != null && radioButton.getModel() == buttonGroup.getSelection()) {
                buttonGroup.clearSelection(); 
            } else {
                radioButton.setSelected(false); 
            }
        }
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        courseDay = new javax.swing.ButtonGroup();
        logo1 = new javax.swing.JLabel();
        iSignOutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        eNewCourseNameLabel = new java.awt.Label();
        eNewCourseNameTf = new javax.swing.JTextField();
        eNewCourseCodeLabel = new java.awt.Label();
        eNewTimeTf = new javax.swing.JTextField();
        eNewTimeLabel = new java.awt.Label();
        eNewMeetingLinkTf = new javax.swing.JTextField();
        eNewMeetingLinkLabel = new java.awt.Label();
        eNewCourseCodeTf = new javax.swing.JTextField();
        iDaysLabel = new java.awt.Label();
        eTuesdayRBtn = new javax.swing.JRadioButton();
        eMondayRBtn = new javax.swing.JRadioButton();
        eWednesdayRBtn = new javax.swing.JRadioButton();
        eThursdayRBtn = new javax.swing.JRadioButton();
        eFridayRBtn = new javax.swing.JRadioButton();
        eSaturdayRBtn = new javax.swing.JRadioButton();
        eEditBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        eEditCourseNameLabel = new java.awt.Label();
        eEditCourseNameTf = new javax.swing.JTextField();
        eDeleteBtn = new javax.swing.JButton();
        eViewCourseBtn = new javax.swing.JButton();
        eSearchCourseBtn = new javax.swing.JButton();
        iEditCourseBtn = new javax.swing.JButton();
        eInputCourseBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassSync");
        setBackground(new java.awt.Color(0, 102, 153));
        setMinimumSize(new java.awt.Dimension(823, 314));
        setResizable(false);

        logo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/CL (2).png"))); // NOI18N

        iSignOutBtn.setBackground(new java.awt.Color(242, 242, 242));
        iSignOutBtn.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        iSignOutBtn.setForeground(new java.awt.Color(0, 102, 153));
        iSignOutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (1).png"))); // NOI18N
        iSignOutBtn.setBorder(null);
        iSignOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iSignOutBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        iSignOutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        iSignOutBtn.setIconTextGap(0);
        iSignOutBtn.setLabel("Sign Out");
        iSignOutBtn.setMargin(new java.awt.Insets(1, 10, 1, 10));
        iSignOutBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iSignOutBtnStateChanged(evt);
            }
        });
        iSignOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSignOutBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        eNewCourseNameLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        eNewCourseNameLabel.setForeground(new java.awt.Color(242, 242, 242));
        eNewCourseNameLabel.setText("New Course Name");

        eNewCourseNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eNewCourseNameTfActionPerformed(evt);
            }
        });

        eNewCourseCodeLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        eNewCourseCodeLabel.setForeground(new java.awt.Color(242, 242, 242));
        eNewCourseCodeLabel.setText("New Course Code");

        eNewTimeTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eNewTimeTfActionPerformed(evt);
            }
        });

        eNewTimeLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        eNewTimeLabel.setForeground(new java.awt.Color(242, 242, 242));
        eNewTimeLabel.setText("New Time (HH:mm)");

        eNewMeetingLinkTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eNewMeetingLinkTfActionPerformed(evt);
            }
        });

        eNewMeetingLinkLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        eNewMeetingLinkLabel.setForeground(new java.awt.Color(242, 242, 242));
        eNewMeetingLinkLabel.setText("New Meeting Link");

        eNewCourseCodeTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eNewCourseCodeTfActionPerformed(evt);
            }
        });

        iDaysLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iDaysLabel.setForeground(new java.awt.Color(242, 242, 242));
        iDaysLabel.setText("New Day");

        eTuesdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eTuesdayRBtn);
        eTuesdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eTuesdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eTuesdayRBtn.setText("Tuesday");
        eTuesdayRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eTuesdayRBtnActionPerformed(evt);
            }
        });

        eMondayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eMondayRBtn);
        eMondayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eMondayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eMondayRBtn.setText("Monday");

        eWednesdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eWednesdayRBtn);
        eWednesdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eWednesdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eWednesdayRBtn.setText("Wednesday");

        eThursdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eThursdayRBtn);
        eThursdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eThursdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eThursdayRBtn.setText("Thursday");

        eFridayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eFridayRBtn);
        eFridayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eFridayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eFridayRBtn.setText("Friday");

        eSaturdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(eSaturdayRBtn);
        eSaturdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eSaturdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        eSaturdayRBtn.setText("Saturday");
        eSaturdayRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eSaturdayRBtnActionPerformed(evt);
            }
        });

        eEditBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eEditBtn.setForeground(new java.awt.Color(0, 102, 153));
        eEditBtn.setText("Edit");
        eEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eEditBtnActionPerformed(evt);
            }
        });

        eEditCourseNameLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        eEditCourseNameLabel.setForeground(new java.awt.Color(242, 242, 242));
        eEditCourseNameLabel.setText("Course Name");

        eEditCourseNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eEditCourseNameTfActionPerformed(evt);
            }
        });

        eDeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eDeleteBtn.setForeground(new java.awt.Color(0, 102, 153));
        eDeleteBtn.setText("Delete");
        eDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eDeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eNewCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iDaysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(eTuesdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eMondayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eWednesdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eThursdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eFridayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eSaturdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eNewCourseCodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewTimeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewMeetingLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewMeetingLinkTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewCourseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eNewTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eEditCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(eEditCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(eDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(eEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(eEditCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eEditBtn)
                        .addComponent(eDeleteBtn))
                    .addComponent(eEditCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eNewCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eNewCourseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eNewCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eNewCourseCodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eNewTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iDaysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eNewTimeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eMondayRBtn))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(eNewMeetingLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(eNewMeetingLinkTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eTuesdayRBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eWednesdayRBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eThursdayRBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eFridayRBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eSaturdayRBtn)
                .addGap(133, 133, 133))
        );

        eViewCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        eViewCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        eViewCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/3.png"))); // NOI18N
        eViewCourseBtn.setText("View Courses");
        eViewCourseBtn.setAlignmentY(0.0F);
        eViewCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eViewCourseBtn.setFocusCycleRoot(true);
        eViewCourseBtn.setIconTextGap(0);
        eViewCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eViewCourseBtnActionPerformed(evt);
            }
        });

        eSearchCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        eSearchCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        eSearchCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/4.png"))); // NOI18N
        eSearchCourseBtn.setText("Search Course");
        eSearchCourseBtn.setToolTipText("");
        eSearchCourseBtn.setAlignmentY(0.0F);
        eSearchCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eSearchCourseBtn.setFocusCycleRoot(true);
        eSearchCourseBtn.setIconTextGap(0);
        eSearchCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eSearchCourseBtnActionPerformed(evt);
            }
        });

        iEditCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iEditCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iEditCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/5.png"))); // NOI18N
        iEditCourseBtn.setText("Edit Course");
        iEditCourseBtn.setAlignmentY(0.0F);
        iEditCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iEditCourseBtn.setFocusCycleRoot(true);
        iEditCourseBtn.setIconTextGap(0);
        iEditCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iEditCourseBtnActionPerformed(evt);
            }
        });

        eInputCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        eInputCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        eInputCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (6).png"))); // NOI18N
        eInputCourseBtn.setText("Input Course");
        eInputCourseBtn.setAlignmentY(0.0F);
        eInputCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eInputCourseBtn.setFocusCycleRoot(true);
        eInputCourseBtn.setIconTextGap(0);
        eInputCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eInputCourseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(eInputCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(eViewCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(eSearchCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(iEditCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(140, 140, 140)
                            .addComponent(iSignOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(eInputCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(eViewCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(eSearchCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(iEditCourseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(62, 62, 62)
                            .addComponent(iSignOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iSignOutBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iSignOutBtnStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_iSignOutBtnStateChanged

    private void iSignOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSignOutBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;

        loginjf loginFrame = new loginjf();
        loginFrame.setLocation(currentX, currentY);
        loginFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iSignOutBtnActionPerformed

    private void eNewCourseNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eNewCourseNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eNewCourseNameTfActionPerformed

    private void eNewTimeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eNewTimeTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eNewTimeTfActionPerformed

    private void eNewMeetingLinkTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eNewMeetingLinkTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eNewMeetingLinkTfActionPerformed

    private void eNewCourseCodeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eNewCourseCodeTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eNewCourseCodeTfActionPerformed

    private void eTuesdayRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eTuesdayRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eTuesdayRBtnActionPerformed

    private void eSaturdayRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eSaturdayRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eSaturdayRBtnActionPerformed

    private void eEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eEditBtnActionPerformed
    // Get the course name entered in the text field
    String editCourseName = eEditCourseNameTf.getText().trim();
    // Check if the course name is empty
    if (editCourseName.isEmpty()) {
        // Show a warning message if the course name is empty
        JOptionPane.showMessageDialog(this, "Error: Course Name Required.", "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Initialize a boolean variable to track if the course was found
    boolean found = false;
    // Create an ArrayList to store lines read from the file
    ArrayList<String> lines = new ArrayList<>();

    try (BufferedReader br = new BufferedReader(new FileReader(openAcc))) {
        String line;
        // Read each line from the file
        while ((line = br.readLine()) != null) {
            // Extract course details from the line
            Map<String, String[]> courseDetailsMap = extractCourseDetails(line);
            // Check if the course details are valid
            if (courseDetailsMap == null) {
                continue; // Skip to the next iteration if course details are invalid
            }
            // Get the course name from the course details map
            String[] courseNameArray = courseDetailsMap.get("courseName");
            // Check if the course name array is null or empty
            if (courseNameArray == null || courseNameArray.length == 0) {
                continue; // Skip to the next iteration if the course name is invalid
            }
            // Get the course name from the array
            String courseName = courseNameArray[0];
            // Get the selected day for the course
            String day = getSelectedDay(courseDetailsMap);

            // Check if the current course name matches the edit course name
            if (courseName.equalsIgnoreCase(editCourseName)) {
                // Set found to true
                found = true;
                // Get new values entered for the course details
                String newCourseName = eNewCourseNameTf.getText().trim();
                String newCourseCode = eNewCourseCodeTf.getText().trim();
                String newTime = eNewTimeTf.getText().trim();
                String newMeetingLink = eNewMeetingLinkTf.getText().trim();

                // Update the course details map with new values if they are not empty
                if (!newCourseName.isEmpty()) {
                    courseDetailsMap.put("courseName", new String[]{newCourseName});
                }
                if (!newCourseCode.isEmpty()) {
                    courseDetailsMap.put("courseCode", new String[]{newCourseCode});
                }
                if (!newTime.isEmpty()) {
                    courseDetailsMap.put("time", new String[]{newTime});
                }
                if (!newMeetingLink.isEmpty()) {
                    courseDetailsMap.put("meetingLink", new String[]{newMeetingLink});
                }
                // Construct the updated course line with the new details
                String updatedLine = constructCourseLine(courseDetailsMap, day);
                // Add the updated line to the list of lines
                lines.add(updatedLine);
            } else {
                // Add the unchanged line to the list of lines
                lines.add(line);
            }
        }

        // Write the updated lines back to the file
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(openAcc))) {
            for (String updatedLine : lines) {
                bw.write(updatedLine);
                bw.newLine();
            }
        }
    } catch (IOException e) {
    }

    // Show appropriate message based on whether the course was found or not
    if (found) {
        JOptionPane.showMessageDialog(this, "Courses updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        // Clear all input fields
        clearAll(); 
    } else {
        JOptionPane.showMessageDialog(this, "No courses found with the specified name.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_eEditBtnActionPerformed
    
    // Method to construct the course line with updated details
    private String constructCourseLine(Map<String, String[]> courseDetailsMap, String day) {
        // Get course details from the map or set empty string if not found
        String courseName = courseDetailsMap.containsKey("courseName") ? courseDetailsMap.get("courseName")[0] : "";
        String courseCode = courseDetailsMap.containsKey("courseCode") ? courseDetailsMap.get("courseCode")[0] : "";
        String time = courseDetailsMap.containsKey("time") ? courseDetailsMap.get("time")[0] : "";
        String meetingLink = courseDetailsMap.containsKey("meetingLink") ? courseDetailsMap.get("meetingLink")[0] : "";

        // Construct the course line with updated details
        return courseName + "," + courseCode + "&" + time + ";" + day + "-" + meetingLink;
    }

    // Method to get the selected day for the course
    private String getSelectedDay(Map<String, String[]> courseDetailsMap) {
        // Check if the course details map is not null and contains "day" key
        if (courseDetailsMap != null && courseDetailsMap.containsKey("day")) {
            // Get the day array from the map
            String[] dayArray = courseDetailsMap.get("day");
            // Check if the day array is not null and has elements
            if (dayArray.length > 0) {
                // Return the first day from the array
                return dayArray[0];
            }
        }
        // Return an empty string if day is not found
        return ""; 
    }

    // Method to extract course details from a line of text
    private Map<String, String[]> extractCourseDetails(String line) {
        // Initialize a map to store course details
        Map<String, String[]> courseDetailsMap = new HashMap<>();
        // Split the line by comma to separate course name and details
        String[] parts = line.split(",");
        // Check if there are enough parts to represent course details
        if (parts.length >= 2) {
            // Get course name from the first part
            String courseName = parts[0];
            // Split the second part (course details) by "&" to separate course code, time, and link
            String[] courseDetails = parts[1].split("&");
            // Check if there are enough parts to represent course details
            if (courseDetails.length >= 2) {
                // Get course code from the first part of course details
                String courseCode = courseDetails[0];
                // Split the second part of course details (time and link) by ";" to separate them
                String[] timeDaysAndLink = courseDetails[1].split(";");
                // Check if there are enough parts to represent time and link
                if (timeDaysAndLink.length >= 2) {
                    // Get time from the first part of time and link
                    String time = timeDaysAndLink[0];
                    // Split the second part of time and link (days and link) by "-" to separate them
                    String[] daysAndLink = timeDaysAndLink[1].split("-");
                    // Check if there are enough parts to represent days and link
                    if (daysAndLink.length >= 2) {
                        // Put course details into the map
                        courseDetailsMap.put("courseName", new String[]{courseName});
                        courseDetailsMap.put("courseCode", new String[]{courseCode});
                        courseDetailsMap.put("time", new String[]{time});
                        courseDetailsMap.put("day", new String[]{daysAndLink[0]}); 
                        courseDetailsMap.put("meetingLink", new String[]{daysAndLink[1]});
                    }
                }
            }
        }
        // Return the map containing course details
        return courseDetailsMap;
    }
    
    private void eViewCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eViewCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;

        viewCoursesjf viewFrame = new viewCoursesjf(openAcc);
        viewFrame.setLocation(currentX, currentY);
        viewFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_eViewCourseBtnActionPerformed

    private void eSearchCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eSearchCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;

        searchCoursejf searchFrame = new searchCoursejf(openAcc);
        searchFrame.setLocation(currentX, currentY);
        searchFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_eSearchCourseBtnActionPerformed

    private void eInputCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eInputCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        inputCoursesjf inputFrame = new inputCoursesjf(openAcc);
        inputFrame.setLocation(currentX, currentY);
        inputFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_eInputCourseBtnActionPerformed

    private void eEditCourseNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eEditCourseNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eEditCourseNameTfActionPerformed

    private void iEditCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iEditCourseBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iEditCourseBtnActionPerformed

    private void eDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eDeleteBtnActionPerformed
        // Get the course name entered in the text field
        String deleteCourseName = eEditCourseNameTf.getText().trim();

        // Check if the course name is empty
        if (deleteCourseName.isEmpty()) {
            // Show a warning message if the course name is empty
            JOptionPane.showMessageDialog(this, "Error: Course Name Required.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Create an ArrayList to store lines read from the file
        ArrayList<String> lines = new ArrayList<>();
        boolean courseFound = false; // Flag to track if the course name was found

        try (BufferedReader br = new BufferedReader(new FileReader(openAcc))) {
            String line;
            // Read each line from the file
            while ((line = br.readLine()) != null) {
                // Extract course details from the line
                Map<String, String[]> courseDetailsMap = extractCourseDetails(line);
                // Check if the course details are valid
                if (courseDetailsMap == null) {
                    continue; // Skip to the next iteration if course details are invalid
                }
                // Get the course name from the course details map
                String[] courseNameArray = courseDetailsMap.get("courseName");
                // Check if the course name array is null or empty
                if (courseNameArray == null || courseNameArray.length == 0) {
                    continue; // Skip to the next iteration if the course name is invalid
                }
                // Get the course name from the array
                String courseName = courseNameArray[0];

                // Check if the current course name matches the delete course name
                if (courseName.equalsIgnoreCase(deleteCourseName)) {
                    // Skip adding this line to the list, effectively deleting it
                    courseFound = true;
                    continue;
                }

                // Add the unchanged line to the list of lines
                lines.add(line);
            }

            // If the course name was not found, show an error message
            if (!courseFound) {
                JOptionPane.showMessageDialog(this, "Error: Course Name Not Found.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
        }

            // Write the updated lines back to the file
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(openAcc))) {
                for (String updatedLine : lines) {
                    bw.write(updatedLine);
                    bw.newLine();
                }
            }
        } catch (IOException e) {
            // Handle IOException
        }

        // Show success message
        JOptionPane.showMessageDialog(this, "Course deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        // Clear all input fields
        clearAll();

    }//GEN-LAST:event_eDeleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editCoursejf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup courseDay;
    private javax.swing.JButton eDeleteBtn;
    private javax.swing.JButton eEditBtn;
    private java.awt.Label eEditCourseNameLabel;
    private javax.swing.JTextField eEditCourseNameTf;
    private javax.swing.JRadioButton eFridayRBtn;
    private javax.swing.JButton eInputCourseBtn;
    private javax.swing.JRadioButton eMondayRBtn;
    private java.awt.Label eNewCourseCodeLabel;
    private javax.swing.JTextField eNewCourseCodeTf;
    private java.awt.Label eNewCourseNameLabel;
    private javax.swing.JTextField eNewCourseNameTf;
    private java.awt.Label eNewMeetingLinkLabel;
    private javax.swing.JTextField eNewMeetingLinkTf;
    private java.awt.Label eNewTimeLabel;
    private javax.swing.JTextField eNewTimeTf;
    private javax.swing.JRadioButton eSaturdayRBtn;
    private javax.swing.JButton eSearchCourseBtn;
    private javax.swing.JRadioButton eThursdayRBtn;
    private javax.swing.JRadioButton eTuesdayRBtn;
    private javax.swing.JButton eViewCourseBtn;
    private javax.swing.JRadioButton eWednesdayRBtn;
    private java.awt.Label iDaysLabel;
    private javax.swing.JButton iEditCourseBtn;
    private javax.swing.JButton iSignOutBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel logo1;
    // End of variables declaration//GEN-END:variables
}
