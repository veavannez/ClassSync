/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classsync;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import javax.swing.JTextField;


public class inputCoursesjf extends javax.swing.JFrame {
    public String openAcc;
    /**
     * Creates new form inputEventjf
     * @param openAcc
     */
    public inputCoursesjf(String openAcc) {
        // Initialize open account
        this.openAcc = openAcc;
        initComponents();
    }

    private inputCoursesjf() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
// Method to clear all input fields and radio buttons in the jPanel2
private void clearAll() {
    // Get all components in the jPanel2
    Component[] components = jPanel2.getComponents();
    // Iterate through each component
    for (Component component : components) {
        // If the component is a JTextField
        if (component instanceof JTextField jTextField) {
            // Clear the text field
            jTextField.setText("");
        // If the component is a JRadioButton
        } else if (component instanceof JRadioButton radioButton) {
            // Get the button group associated with the radio buttons
            ButtonGroup buttonGroup = courseDay;
            // If a button group is not null and the radio button is selected
            if (buttonGroup != null && radioButton.getModel() == buttonGroup.getSelection()) {
                // Clear the selection of the button group
                buttonGroup.clearSelection(); 
            // If a button group is null or the radio button is not selected
            } else {
                // Set the radio button as unselected
                radioButton.setSelected(false); 
            }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        courseDay = new javax.swing.ButtonGroup();
        logo1 = new javax.swing.JLabel();
        iSignOutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        iCourseNameLabel = new java.awt.Label();
        iCourseNameTf = new javax.swing.JTextField();
        iCourseCodeLabel = new java.awt.Label();
        iTimeTf = new javax.swing.JTextField();
        iTimeLabel = new java.awt.Label();
        iMeetingLinkTf = new javax.swing.JTextField();
        iMeetingLinkLabel = new java.awt.Label();
        iCourseCodeTf = new javax.swing.JTextField();
        iDayLabel = new java.awt.Label();
        iTuesdayRBtn = new javax.swing.JRadioButton();
        iMondayRBtn = new javax.swing.JRadioButton();
        iWednesdayRBtn = new javax.swing.JRadioButton();
        iThursdayRBtn = new javax.swing.JRadioButton();
        iFridayRBtn = new javax.swing.JRadioButton();
        iSaturdayRBtn = new javax.swing.JRadioButton();
        iInputBtn = new javax.swing.JButton();
        iViewCourseBtn = new javax.swing.JButton();
        iSearchCourseBtn = new javax.swing.JButton();
        iEditCourseBtn = new javax.swing.JButton();
        iInputCourseBtn = new javax.swing.JButton();

        logo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/CL (2).png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassSync");
        setBackground(new java.awt.Color(0, 102, 153));
        setMinimumSize(new java.awt.Dimension(823, 314));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/CL (2).png"))); // NOI18N
        getContentPane().add(logo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 220, 80));

        iSignOutBtn.setBackground(new java.awt.Color(242, 242, 242));
        iSignOutBtn.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        iSignOutBtn.setForeground(new java.awt.Color(0, 102, 153));
        iSignOutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (1).png"))); // NOI18N
        iSignOutBtn.setBorder(null);
        iSignOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iSignOutBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        iSignOutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        iSignOutBtn.setIconTextGap(0);
        iSignOutBtn.setLabel("Sign Out");
        iSignOutBtn.setMargin(new java.awt.Insets(1, 10, 1, 10));
        iSignOutBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iSignOutBtnStateChanged(evt);
            }
        });
        iSignOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSignOutBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iSignOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 90, 20));

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        iCourseNameLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iCourseNameLabel.setForeground(new java.awt.Color(242, 242, 242));
        iCourseNameLabel.setText("Course Name");

        iCourseNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iCourseNameTfActionPerformed(evt);
            }
        });

        iCourseCodeLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iCourseCodeLabel.setForeground(new java.awt.Color(242, 242, 242));
        iCourseCodeLabel.setText("Course Code");

        iTimeTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iTimeTfActionPerformed(evt);
            }
        });

        iTimeLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iTimeLabel.setForeground(new java.awt.Color(242, 242, 242));
        iTimeLabel.setText("Time (HH:mm)");

        iMeetingLinkTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iMeetingLinkTfActionPerformed(evt);
            }
        });

        iMeetingLinkLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iMeetingLinkLabel.setForeground(new java.awt.Color(242, 242, 242));
        iMeetingLinkLabel.setText("Meeting Link");

        iCourseCodeTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iCourseCodeTfActionPerformed(evt);
            }
        });

        iDayLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        iDayLabel.setForeground(new java.awt.Color(242, 242, 242));
        iDayLabel.setText("Day");

        iTuesdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iTuesdayRBtn);
        iTuesdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iTuesdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iTuesdayRBtn.setText("Tuesday");
        iTuesdayRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iTuesdayRBtnActionPerformed(evt);
            }
        });

        iMondayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iMondayRBtn);
        iMondayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iMondayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iMondayRBtn.setText("Monday");

        iWednesdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iWednesdayRBtn);
        iWednesdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iWednesdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iWednesdayRBtn.setText("Wednesday");

        iThursdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iThursdayRBtn);
        iThursdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iThursdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iThursdayRBtn.setText("Thursday");

        iFridayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iFridayRBtn);
        iFridayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iFridayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iFridayRBtn.setText("Friday");

        iSaturdayRBtn.setBackground(new java.awt.Color(0, 102, 153));
        courseDay.add(iSaturdayRBtn);
        iSaturdayRBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iSaturdayRBtn.setForeground(new java.awt.Color(242, 242, 242));
        iSaturdayRBtn.setText("Saturday");
        iSaturdayRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSaturdayRBtnActionPerformed(evt);
            }
        });

        iInputBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iInputBtn.setForeground(new java.awt.Color(0, 102, 153));
        iInputBtn.setText("Input");
        iInputBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iInputBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iInputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(iTuesdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iMondayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iWednesdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iThursdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iFridayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iSaturdayRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iCourseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iCourseCodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iTimeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iMeetingLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iMeetingLinkTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iCourseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iCourseNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iCourseCodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iTimeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iMondayRBtn))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(iMeetingLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(iMeetingLinkTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iTuesdayRBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iWednesdayRBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iThursdayRBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iFridayRBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iSaturdayRBtn)
                .addGap(18, 18, 18)
                .addComponent(iInputBtn)
                .addGap(92, 92, 92))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 610, 370));

        iViewCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iViewCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iViewCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/3.png"))); // NOI18N
        iViewCourseBtn.setText("View Courses");
        iViewCourseBtn.setAlignmentY(0.0F);
        iViewCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iViewCourseBtn.setFocusCycleRoot(true);
        iViewCourseBtn.setIconTextGap(0);
        iViewCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iViewCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iViewCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 175, 28));

        iSearchCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iSearchCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iSearchCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/4.png"))); // NOI18N
        iSearchCourseBtn.setText("Search Course");
        iSearchCourseBtn.setToolTipText("");
        iSearchCourseBtn.setAlignmentY(0.0F);
        iSearchCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iSearchCourseBtn.setFocusCycleRoot(true);
        iSearchCourseBtn.setIconTextGap(0);
        iSearchCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSearchCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iSearchCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 175, 28));

        iEditCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iEditCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iEditCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/5.png"))); // NOI18N
        iEditCourseBtn.setText("Edit Course");
        iEditCourseBtn.setAlignmentY(0.0F);
        iEditCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iEditCourseBtn.setFocusCycleRoot(true);
        iEditCourseBtn.setIconTextGap(0);
        iEditCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iEditCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iEditCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 175, 28));

        iInputCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iInputCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iInputCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (6).png"))); // NOI18N
        iInputCourseBtn.setText("Input Course");
        iInputCourseBtn.setAlignmentY(0.0F);
        iInputCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iInputCourseBtn.setFocusCycleRoot(true);
        iInputCourseBtn.setIconTextGap(0);
        iInputCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iInputCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iInputCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 175, 28));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iSignOutBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iSignOutBtnStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_iSignOutBtnStateChanged

    private void iSignOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSignOutBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;

        loginjf loginFrame = new loginjf();
        loginFrame.setLocation(currentX, currentY);
        loginFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iSignOutBtnActionPerformed

    private void iInputCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {
    
 }   
    

    private void iCourseNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iCourseNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iCourseNameTfActionPerformed

    private void iTimeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iTimeTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iTimeTfActionPerformed

    private void iMeetingLinkTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iMeetingLinkTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iMeetingLinkTfActionPerformed

    private void iCourseCodeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iCourseCodeTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iCourseCodeTfActionPerformed

    private void iViewCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iViewCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        viewCoursesjf viewFrame = new viewCoursesjf(openAcc);
        viewFrame.setLocation(currentX, currentY);
        viewFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iViewCourseBtnActionPerformed

    private void iInputBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iInputBtnActionPerformed
        // Initialize a boolean variable to track if a course with the same name already exists
        boolean matched = false;
        boolean conflict = false; // Initialize a boolean variable to track if there is a time conflict

        // Get input values from text fields
        String courseName = iCourseNameTf.getText();
        String courseCode = iCourseCodeTf.getText();
        String time = iTimeTf.getText();
        String meetingLink = iMeetingLinkTf.getText();

        // Check if any input field is empty
        if (courseName.isEmpty() || courseCode.isEmpty() || time.isEmpty() || meetingLink.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error: Please fill in all fields.");
        } else {
            // Check if at least one day is selected
            boolean daySelected = iMondayRBtn.isSelected() || iTuesdayRBtn.isSelected() ||
                                  iWednesdayRBtn.isSelected() || iThursdayRBtn.isSelected() ||
                                  iFridayRBtn.isSelected() || iSaturdayRBtn.isSelected();

            if (!daySelected) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error: Please select a day.");
            } else if (time.length() != 5) { // Check if the time format is valid (5 characters)
                javax.swing.JOptionPane.showMessageDialog(null, "Invalid time format: 24-hour clock format.");
            } else {
                try (BufferedReader br = new BufferedReader(new FileReader(openAcc))) {
                    String line;
                    // Check if a course with the same name already exists
                    while ((line = br.readLine()) != null) {
                        if (!line.isEmpty()) {
                            String[] course = line.split(",");
                            if (course.length > 0 && course[0].equals(courseName)) {
                                matched = true;
                                break;
                            }
                        }
                    }
                } catch (IOException e) {
                    // Handle IOException
                }

                // If a matching course is found, display an error message
                if (matched) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Error: Course already exists.");
                } else {
                    // Check for time conflicts
                    try (BufferedReader br = new BufferedReader(new FileReader(openAcc))) {
                        String line;
                        // Iterate over existing courses to check for conflicts
                        while ((line = br.readLine()) != null) {
                            if (!line.isEmpty()) {
                                // Split the line into parts
                                String[] parts = line.split(",");
                                if (parts.length >= 2) { // Ensure at least course name and details are present
                                    // Split course details (course code, time, day, meeting link)
                                    String[] courseDetails = parts[1].split("&");
                                    if (courseDetails.length >= 2) { // Ensure all details are present
                                        // Split time, days, and meeting link
                                        String[] timeDaysAndLink = courseDetails[1].split(";");
                                        if (timeDaysAndLink.length >= 2) { // Ensure time, days, and meeting link are present
                                            String existingTime = timeDaysAndLink[0];
                                            // Check for conflicts
                                            if (existingTime.equals(time)) {
                                                String[] existingDays = timeDaysAndLink[1].split("-");
                                                // Split days and meeting link
                                                String[] newDays = new String[]{"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
                                                String[] selectedDays = new String[]{};
                                                if (iMondayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Monday";
                                                }
                                                if (iTuesdayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Tuesday";
                                                }
                                                if (iWednesdayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Wednesday";
                                                }
                                                if (iThursdayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Thursday";
                                                }
                                                if (iFridayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Friday";
                                                }
                                                if (iSaturdayRBtn.isSelected()) {
                                                    selectedDays = Arrays.copyOf(selectedDays, selectedDays.length + 1);
                                                    selectedDays[selectedDays.length - 1] = "Saturday";
                                                }

                                                // Check for conflicts
                                                for (String existingDay : existingDays) {
                                                    for (String selectedDay : selectedDays) {
                                                        if (existingDay.equals(selectedDay)) {
                                                            conflict = true;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } catch (IOException e) {
                        // Handle IOException
                    }

                    // If there is a time conflict, display an error message
                    if (conflict) {
                        javax.swing.JOptionPane.showMessageDialog(null, "Error: There is a time conflict with an existing course.");
                    } else {
                        // Write course details to the file
                        try (BufferedWriter bw = new BufferedWriter(new FileWriter(openAcc, true))) {
                            // Write course details
                            bw.write(courseName + "," + courseCode + "&" + time);

                            // Append selected days and meeting link
                            if (iMondayRBtn.isSelected()) {
                                bw.write(";Monday");
                            }
                            if (iTuesdayRBtn.isSelected()) {
                                bw.write(";Tuesday");
                            }
                            if (iWednesdayRBtn.isSelected()) {
                                bw.write(";Wednesday");
                            }
                            if (iThursdayRBtn.isSelected()) {
                                bw.write(";Thursday");
                            }
                            if (iFridayRBtn.isSelected()) {
                                bw.write(";Friday");
                            }
                            if (iSaturdayRBtn.isSelected()) {
                                bw.write(";Saturday");
                            }

                            // Finish writing meeting link and add a new line
                            bw.write("-" + meetingLink);
                            bw.newLine();

                            // Display success message and clear input fields
                            javax.swing.JOptionPane.showMessageDialog(null, "Course added successfully.");
                            clearAll();
                        } catch (IOException e) {
                            // Handle IOException
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_iInputBtnActionPerformed

    private void iSearchCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSearchCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        searchCoursejf searchFrame = new searchCoursejf(openAcc);
        searchFrame.setLocation(currentX, currentY);
        searchFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iSearchCourseBtnActionPerformed

    private void iTuesdayRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iTuesdayRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iTuesdayRBtnActionPerformed

    private void iSaturdayRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSaturdayRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iSaturdayRBtnActionPerformed

    private void iEditCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iEditCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        editCoursejf editFrame = new editCoursejf(openAcc);
        editFrame.setLocation(currentX, currentY);
        editFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iEditCourseBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputCoursesjf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputCoursesjf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputCoursesjf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputCoursesjf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputCoursesjf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup courseDay;
    private java.awt.Label iCourseCodeLabel;
    private javax.swing.JTextField iCourseCodeTf;
    private java.awt.Label iCourseNameLabel;
    private javax.swing.JTextField iCourseNameTf;
    private java.awt.Label iDayLabel;
    private javax.swing.JButton iEditCourseBtn;
    private javax.swing.JRadioButton iFridayRBtn;
    private javax.swing.JButton iInputBtn;
    private javax.swing.JButton iInputCourseBtn;
    private java.awt.Label iMeetingLinkLabel;
    private javax.swing.JTextField iMeetingLinkTf;
    private javax.swing.JRadioButton iMondayRBtn;
    private javax.swing.JRadioButton iSaturdayRBtn;
    private javax.swing.JButton iSearchCourseBtn;
    private javax.swing.JButton iSignOutBtn;
    private javax.swing.JRadioButton iThursdayRBtn;
    private java.awt.Label iTimeLabel;
    private javax.swing.JTextField iTimeTf;
    private javax.swing.JRadioButton iTuesdayRBtn;
    private javax.swing.JButton iViewCourseBtn;
    private javax.swing.JRadioButton iWednesdayRBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel logo1;
    // End of variables declaration//GEN-END:variables
}
