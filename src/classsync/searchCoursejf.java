/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classsync;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

public class searchCoursejf extends javax.swing.JFrame {
    public String openAcc;
    
    /**
     * Creates new form searchCoursejf
     * @param openAcc
     */
    public searchCoursejf(String openAcc) {
        this.openAcc = openAcc;
        initComponents();
    }

    private searchCoursejf() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextArea2 = new javax.swing.JTextArea();
        logo1 = new javax.swing.JLabel();
        iSignOutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sSearchArea = new javax.swing.JTextArea();
        sSearchLabel = new java.awt.Label();
        sSearchTf = new javax.swing.JTextField();
        sSearchBtn = new javax.swing.JButton();
        iViewCourseBtn = new javax.swing.JButton();
        iSearchCourseBtn = new javax.swing.JButton();
        iEditCourseBtn = new javax.swing.JButton();
        iInputEventBtn = new javax.swing.JButton();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.getAccessibleContext().setAccessibleParent(jScrollPane2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/CL (2).png"))); // NOI18N
        getContentPane().add(logo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 220, 80));

        iSignOutBtn.setBackground(new java.awt.Color(242, 242, 242));
        iSignOutBtn.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        iSignOutBtn.setForeground(new java.awt.Color(0, 102, 153));
        iSignOutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (1).png"))); // NOI18N
        iSignOutBtn.setBorder(null);
        iSignOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iSignOutBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        iSignOutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        iSignOutBtn.setIconTextGap(0);
        iSignOutBtn.setLabel("Sign Out");
        iSignOutBtn.setMargin(new java.awt.Insets(1, 10, 1, 10));
        iSignOutBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iSignOutBtnStateChanged(evt);
            }
        });
        iSignOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSignOutBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iSignOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 90, 20));

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        sSearchArea.setEditable(false);
        sSearchArea.setColumns(20);
        sSearchArea.setRows(5);
        jScrollPane2.setViewportView(sSearchArea);
        sSearchArea.getAccessibleContext().setAccessibleParent(jScrollPane2);

        sSearchLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        sSearchLabel.setForeground(new java.awt.Color(242, 242, 242));
        sSearchLabel.setText("Search (Name/Code/Day)");

        sSearchTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sSearchTfActionPerformed(evt);
            }
        });

        sSearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sSearchBtn.setForeground(new java.awt.Color(0, 102, 153));
        sSearchBtn.setText("Search");
        sSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sSearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sSearchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(sSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(sSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(sSearchTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sSearchBtn)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 610, 370));

        iViewCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iViewCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iViewCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/3.png"))); // NOI18N
        iViewCourseBtn.setText("View Courses");
        iViewCourseBtn.setAlignmentY(0.0F);
        iViewCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iViewCourseBtn.setFocusCycleRoot(true);
        iViewCourseBtn.setIconTextGap(0);
        iViewCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iViewCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iViewCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 175, 28));

        iSearchCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iSearchCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iSearchCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/4.png"))); // NOI18N
        iSearchCourseBtn.setText("Search Course");
        iSearchCourseBtn.setToolTipText("");
        iSearchCourseBtn.setAlignmentY(0.0F);
        iSearchCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iSearchCourseBtn.setFocusCycleRoot(true);
        iSearchCourseBtn.setIconTextGap(0);
        getContentPane().add(iSearchCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 175, 28));

        iEditCourseBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iEditCourseBtn.setForeground(new java.awt.Color(0, 102, 153));
        iEditCourseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/5.png"))); // NOI18N
        iEditCourseBtn.setText("Edit Course");
        iEditCourseBtn.setAlignmentY(0.0F);
        iEditCourseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iEditCourseBtn.setFocusCycleRoot(true);
        iEditCourseBtn.setIconTextGap(0);
        iEditCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iEditCourseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iEditCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 175, 28));

        iInputEventBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        iInputEventBtn.setForeground(new java.awt.Color(0, 102, 153));
        iInputEventBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsync/images/Untitled design (6).png"))); // NOI18N
        iInputEventBtn.setText("Input Course");
        iInputEventBtn.setAlignmentY(0.0F);
        iInputEventBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iInputEventBtn.setFocusCycleRoot(true);
        iInputEventBtn.setIconTextGap(0);
        iInputEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iInputEventBtnActionPerformed(evt);
            }
        });
        getContentPane().add(iInputEventBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 175, 28));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iSignOutBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iSignOutBtnStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_iSignOutBtnStateChanged

    private void iSignOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSignOutBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;

        loginjf loginFrame = new loginjf();
        loginFrame.setLocation(currentX, currentY);
        loginFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iSignOutBtnActionPerformed

    private void iViewCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iViewCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        viewCoursesjf viewFrame = new viewCoursesjf(openAcc);
        
        viewFrame.setLocation(currentX, currentY);
        
        viewFrame.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_iViewCourseBtnActionPerformed

    private void iInputEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iInputEventBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        inputCoursesjf inputFrame = new inputCoursesjf(openAcc);
        inputFrame.setLocation(currentX, currentY);
        inputFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iInputEventBtnActionPerformed

    private void sSearchTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sSearchTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sSearchTfActionPerformed

    private void sSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sSearchBtnActionPerformed
    // Get the search term from the text field and trim whitespace
    String searchTerm = sSearchTf.getText().trim();
    // Check if the search term is empty
    if (searchTerm.isEmpty()) {
        // Display a warning message if the search term is empty
        JOptionPane.showMessageDialog(this, "Error: Search Term Required.", "Error", JOptionPane.WARNING_MESSAGE);
        return; // Exit the method if the search term is empty
    }

    boolean found = false; // Flag to track if any matches are found
    StringBuilder searchResults = new StringBuilder(); // StringBuilder to store search results

    try (BufferedReader br = new BufferedReader(new FileReader(openAcc))) {
        String line;
        // Read each line from the file
        while ((line = br.readLine()) != null) {
            // Extract course details from the line
            Map<String, String[]> courseDetailsMap = extractCourseDetails(line);
            // Check if course details are extracted successfully
            if (courseDetailsMap != null) {
                // Retrieve course details arrays from the map
                String[] courseNameArray = courseDetailsMap.get("courseName");
                String[] courseCodeArray = courseDetailsMap.get("courseCode");
                String[] dayArray = courseDetailsMap.get("day");
                String[] timeArray = courseDetailsMap.get("time");
                String[] meetingLinkArray = courseDetailsMap.get("meetingLink");

                // Check if all required course details arrays are not null
                if (courseNameArray != null && courseCodeArray != null && dayArray != null && timeArray != null && meetingLinkArray != null) {
                    // Retrieve individual course details from the arrays
                    String courseName = courseNameArray[0];
                    String courseCode = courseCodeArray[0];
                    String day = dayArray[0]; 
                    String time = timeArray[0];
                    String meetingLink = meetingLinkArray[0];

                    // Check if the search term matches course name, course code, or day
                    if (courseName.equalsIgnoreCase(searchTerm) || courseCode.equalsIgnoreCase(searchTerm) || day.equalsIgnoreCase(searchTerm)) {
                        found = true; // Set found flag to true
                        // Append course details to the search results
                        appendCourseDetails(searchResults, courseName, courseCode, day, time, meetingLink);
                    }
                }
            }
        }
    } catch (IOException e) {
        // Handle IOException (print the exception for debugging purposes)
    }

    // Display search results if any matches are found, otherwise display a message
    if (found) {
        sSearchArea.setText(searchResults.toString()); // Display search results
    } else {
        sSearchArea.setText(""); // Clear search area
        JOptionPane.showMessageDialog(this, "No Match Found.", "Message", JOptionPane.INFORMATION_MESSAGE); // Display no match message
    }
    }//GEN-LAST:event_sSearchBtnActionPerformed

    private void iEditCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iEditCourseBtnActionPerformed
        int currentX = getLocation().x;
        int currentY = getLocation().y;
        
        editCoursejf editFrame = new editCoursejf(openAcc);
        editFrame.setLocation(currentX, currentY);
        editFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_iEditCourseBtnActionPerformed
    
    private void appendCourseDetails(StringBuilder searchResults, String courseName, String courseCode, String day, String time, String meetingLink) {
    // Append a separator line
    searchResults.append("=======================================\n");
    // Append formatted course name and code
    searchResults.append(String.format("%35s || %s\n", "COURSE: " + courseName, courseCode));
    // Append another separator line
    searchResults.append("=======================================\n");
    // Append day, time, and meeting link details
    searchResults.append("Day: ").append(day).append("\n");
    searchResults.append("Time: ").append(time).append("\n");
    searchResults.append("Meeting Link: ").append(meetingLink).append("\n");
    // Append a line as a separator
    searchResults.append("---------------------------------------------------------------------\n");
    }

    private Map<String, String[]> extractCourseDetails(String line) {
        Map<String, String[]> courseDetailsMap = new HashMap<>(); // Initialize map to store course details
        String[] parts = line.split(","); // Split the line by commas
        if (parts.length >= 2) { // Check if there are at least two parts
            String courseName = parts[0]; // Extract the course name
            String[] courseDetails = parts[1].split("&"); // Split the second part by '&' to get further details
            if (courseDetails.length >= 2) { // Check if there are at least two subparts
                String courseCode = courseDetails[0]; // Extract the course code
                String[] timeDaysAndLink = courseDetails[1].split(";"); // Split the third part by ';' to get time, days, and link
                if (timeDaysAndLink.length >= 2) { // Check if there are at least two subparts
                    String time = timeDaysAndLink[0]; // Extract the time
                    String[] daysAndLink = timeDaysAndLink[1].split("-"); // Split the fourth part by '-' to get days and link
                    if (daysAndLink.length >= 2) { // Check if there are at least two subparts
                        // Populate the map with course details
                        courseDetailsMap.put("courseName", new String[]{courseName});
                        courseDetailsMap.put("courseCode", new String[]{courseCode});
                        courseDetailsMap.put("time", new String[]{time});
                        courseDetailsMap.put("day", new String[]{daysAndLink[0]});
                        courseDetailsMap.put("meetingLink", new String[]{daysAndLink[1]});
                    }
                }
            }
        }
        return courseDetailsMap; // Return the map containing course details
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(searchCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(searchCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(searchCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(searchCoursejf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new searchCoursejf().setVisible(true);
        }
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton iEditCourseBtn;
    private javax.swing.JButton iInputEventBtn;
    private javax.swing.JButton iSearchCourseBtn;
    private javax.swing.JButton iSignOutBtn;
    private javax.swing.JButton iViewCourseBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel logo1;
    private javax.swing.JTextArea sSearchArea;
    private javax.swing.JButton sSearchBtn;
    private java.awt.Label sSearchLabel;
    private javax.swing.JTextField sSearchTf;
    // End of variables declaration//GEN-END:variables
}
